|eightBusInterface
clk => clk.IN3
rst => rst.IN3
dataReady => dataReady.IN1
receiveData => receiveData.IN1
eightBitInp[0] => eightBitInp[0].IN1
eightBitInp[1] => eightBitInp[1].IN1
eightBitInp[2] => eightBitInp[2].IN1
eightBitInp[3] => eightBitInp[3].IN1
eightBitInp[4] => eightBitInp[4].IN1
eightBitInp[5] => eightBitInp[5].IN1
eightBitInp[6] => eightBitInp[6].IN1
eightBitInp[7] => eightBitInp[7].IN1
readyToAccept <= inputWrapper:myInputWrapper.port7
OutBuffFull <= outputWrapper:myOutputWrapper.port7
error <= divider:myDivider.port8
eightBitOut[0] <= outputWrapper:myOutputWrapper.port8
eightBitOut[1] <= outputWrapper:myOutputWrapper.port8
eightBitOut[2] <= outputWrapper:myOutputWrapper.port8
eightBitOut[3] <= outputWrapper:myOutputWrapper.port8
eightBitOut[4] <= outputWrapper:myOutputWrapper.port8
eightBitOut[5] <= outputWrapper:myOutputWrapper.port8
eightBitOut[6] <= outputWrapper:myOutputWrapper.port8
eightBitOut[7] <= outputWrapper:myOutputWrapper.port8


|eightBusInterface|inputWrapper:myInputWrapper
dataReady => ns.IN1
dataReady => ns.Init.DATAB
dataReady => Selector1.IN3
dataReady => Selector0.IN1
dataReady => ns.IN1
dataReady => Selector2.IN1
clk => B[8]~reg0.CLK
clk => B[9]~reg0.CLK
clk => B[10]~reg0.CLK
clk => B[11]~reg0.CLK
clk => B[12]~reg0.CLK
clk => B[13]~reg0.CLK
clk => B[14]~reg0.CLK
clk => B[15]~reg0.CLK
clk => B[0]~reg0.CLK
clk => B[1]~reg0.CLK
clk => B[2]~reg0.CLK
clk => B[3]~reg0.CLK
clk => B[4]~reg0.CLK
clk => B[5]~reg0.CLK
clk => B[6]~reg0.CLK
clk => B[7]~reg0.CLK
clk => A[8]~reg0.CLK
clk => A[9]~reg0.CLK
clk => A[10]~reg0.CLK
clk => A[11]~reg0.CLK
clk => A[12]~reg0.CLK
clk => A[13]~reg0.CLK
clk => A[14]~reg0.CLK
clk => A[15]~reg0.CLK
clk => A[0]~reg0.CLK
clk => A[1]~reg0.CLK
clk => A[2]~reg0.CLK
clk => A[3]~reg0.CLK
clk => A[4]~reg0.CLK
clk => A[5]~reg0.CLK
clk => A[6]~reg0.CLK
clk => A[7]~reg0.CLK
clk => counterOutput[0].CLK
clk => counterOutput[1].CLK
clk => ps~1.DATAIN
rst => B[8]~reg0.ACLR
rst => B[9]~reg0.ACLR
rst => B[10]~reg0.ACLR
rst => B[11]~reg0.ACLR
rst => B[12]~reg0.ACLR
rst => B[13]~reg0.ACLR
rst => B[14]~reg0.ACLR
rst => B[15]~reg0.ACLR
rst => B[0]~reg0.ACLR
rst => B[1]~reg0.ACLR
rst => B[2]~reg0.ACLR
rst => B[3]~reg0.ACLR
rst => B[4]~reg0.ACLR
rst => B[5]~reg0.ACLR
rst => B[6]~reg0.ACLR
rst => B[7]~reg0.ACLR
rst => A[8]~reg0.ACLR
rst => A[9]~reg0.ACLR
rst => A[10]~reg0.ACLR
rst => A[11]~reg0.ACLR
rst => A[12]~reg0.ACLR
rst => A[13]~reg0.ACLR
rst => A[14]~reg0.ACLR
rst => A[15]~reg0.ACLR
rst => A[0]~reg0.ACLR
rst => A[1]~reg0.ACLR
rst => A[2]~reg0.ACLR
rst => A[3]~reg0.ACLR
rst => A[4]~reg0.ACLR
rst => A[5]~reg0.ACLR
rst => A[6]~reg0.ACLR
rst => A[7]~reg0.ACLR
rst => counterOutput[0].ACLR
rst => counterOutput[1].ACLR
rst => ps~3.DATAIN
readyForInput => start.IN1
eightBitInp[0] => B[8]~reg0.DATAIN
eightBitInp[0] => A[0]~reg0.DATAIN
eightBitInp[0] => A[8]~reg0.DATAIN
eightBitInp[0] => B[0]~reg0.DATAIN
eightBitInp[1] => A[1]~reg0.DATAIN
eightBitInp[1] => A[9]~reg0.DATAIN
eightBitInp[1] => B[1]~reg0.DATAIN
eightBitInp[1] => B[9]~reg0.DATAIN
eightBitInp[2] => A[2]~reg0.DATAIN
eightBitInp[2] => A[10]~reg0.DATAIN
eightBitInp[2] => B[2]~reg0.DATAIN
eightBitInp[2] => B[10]~reg0.DATAIN
eightBitInp[3] => A[3]~reg0.DATAIN
eightBitInp[3] => A[11]~reg0.DATAIN
eightBitInp[3] => B[3]~reg0.DATAIN
eightBitInp[3] => B[11]~reg0.DATAIN
eightBitInp[4] => A[4]~reg0.DATAIN
eightBitInp[4] => A[12]~reg0.DATAIN
eightBitInp[4] => B[4]~reg0.DATAIN
eightBitInp[4] => B[12]~reg0.DATAIN
eightBitInp[5] => A[5]~reg0.DATAIN
eightBitInp[5] => A[13]~reg0.DATAIN
eightBitInp[5] => B[5]~reg0.DATAIN
eightBitInp[5] => B[13]~reg0.DATAIN
eightBitInp[6] => A[6]~reg0.DATAIN
eightBitInp[6] => A[14]~reg0.DATAIN
eightBitInp[6] => B[6]~reg0.DATAIN
eightBitInp[6] => B[14]~reg0.DATAIN
eightBitInp[7] => A[7]~reg0.DATAIN
eightBitInp[7] => A[15]~reg0.DATAIN
eightBitInp[7] => B[7]~reg0.DATAIN
eightBitInp[7] => B[15]~reg0.DATAIN
A[0] <= A[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[1] <= A[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[2] <= A[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[3] <= A[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[4] <= A[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[5] <= A[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[6] <= A[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[7] <= A[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[8] <= A[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[9] <= A[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[10] <= A[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[11] <= A[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[12] <= A[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[13] <= A[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[14] <= A[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A[15] <= A[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[0] <= B[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[1] <= B[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[2] <= B[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[3] <= B[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[4] <= B[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[5] <= B[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[6] <= B[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[7] <= B[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[8] <= B[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[9] <= B[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[10] <= B[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[11] <= B[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[12] <= B[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[13] <= B[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[14] <= B[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B[15] <= B[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readyToAccept <= readyToAccept.DB_MAX_OUTPUT_PORT_TYPE
start <= start.DB_MAX_OUTPUT_PORT_TYPE


|eightBusInterface|divider:myDivider
A[0] => absA[0].DATAA
A[0] => Add0.IN32
A[0] => Equal0.IN15
A[1] => absA[1].DATAA
A[1] => Add0.IN31
A[1] => Equal0.IN14
A[2] => absA[2].DATAA
A[2] => Add0.IN30
A[2] => Equal0.IN13
A[3] => absA[3].DATAA
A[3] => Add0.IN29
A[3] => Equal0.IN12
A[4] => absA[4].DATAA
A[4] => Add0.IN28
A[4] => Equal0.IN11
A[5] => absA[5].DATAA
A[5] => Add0.IN27
A[5] => Equal0.IN10
A[6] => absA[6].DATAA
A[6] => Add0.IN26
A[6] => Equal0.IN9
A[7] => absA[7].DATAA
A[7] => Add0.IN25
A[7] => Equal0.IN8
A[8] => absA[8].DATAA
A[8] => Add0.IN24
A[8] => Equal0.IN7
A[9] => absA[9].DATAA
A[9] => Add0.IN23
A[9] => Equal0.IN6
A[10] => absA[10].DATAA
A[10] => Add0.IN22
A[10] => Equal0.IN5
A[11] => absA[11].DATAA
A[11] => Add0.IN21
A[11] => Equal0.IN4
A[12] => absA[12].DATAA
A[12] => Add0.IN20
A[12] => Equal0.IN3
A[13] => absA[13].DATAA
A[13] => Add0.IN19
A[13] => Equal0.IN2
A[14] => absA[14].DATAA
A[14] => Add0.IN18
A[14] => Equal0.IN1
A[15] => absA[15].OUTPUTSELECT
A[15] => absA[14].OUTPUTSELECT
A[15] => absA[13].OUTPUTSELECT
A[15] => absA[12].OUTPUTSELECT
A[15] => absA[11].OUTPUTSELECT
A[15] => absA[10].OUTPUTSELECT
A[15] => absA[9].OUTPUTSELECT
A[15] => absA[8].OUTPUTSELECT
A[15] => absA[7].OUTPUTSELECT
A[15] => absA[6].OUTPUTSELECT
A[15] => absA[5].OUTPUTSELECT
A[15] => absA[4].OUTPUTSELECT
A[15] => absA[3].OUTPUTSELECT
A[15] => absA[2].OUTPUTSELECT
A[15] => absA[1].OUTPUTSELECT
A[15] => absA[0].OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => R2.OUTPUTSELECT
A[15] => Add0.IN17
A[15] => Equal0.IN0
B[0] => absB[0].DATAA
B[0] => Add1.IN32
B[1] => absB[1].DATAA
B[1] => Add1.IN31
B[2] => absB[2].DATAA
B[2] => Add1.IN30
B[3] => absB[3].DATAA
B[3] => Add1.IN29
B[4] => absB[4].DATAA
B[4] => Add1.IN28
B[5] => absB[5].DATAA
B[5] => Add1.IN27
B[6] => absB[6].DATAA
B[6] => Add1.IN26
B[7] => absB[7].DATAA
B[7] => Add1.IN25
B[8] => absB[8].DATAA
B[8] => Add1.IN24
B[9] => absB[9].DATAA
B[9] => Add1.IN23
B[10] => absB[10].DATAA
B[10] => Add1.IN22
B[11] => absB[11].DATAA
B[11] => Add1.IN21
B[12] => absB[12].DATAA
B[12] => Add1.IN20
B[13] => absB[13].DATAA
B[13] => Add1.IN19
B[14] => absB[14].DATAA
B[14] => Add1.IN18
B[15] => absB[15].OUTPUTSELECT
B[15] => absB[14].OUTPUTSELECT
B[15] => absB[13].OUTPUTSELECT
B[15] => absB[12].OUTPUTSELECT
B[15] => absB[11].OUTPUTSELECT
B[15] => absB[10].OUTPUTSELECT
B[15] => absB[9].OUTPUTSELECT
B[15] => absB[8].OUTPUTSELECT
B[15] => absB[7].OUTPUTSELECT
B[15] => absB[6].OUTPUTSELECT
B[15] => absB[5].OUTPUTSELECT
B[15] => absB[4].OUTPUTSELECT
B[15] => absB[3].OUTPUTSELECT
B[15] => absB[2].OUTPUTSELECT
B[15] => absB[1].OUTPUTSELECT
B[15] => absB[0].OUTPUTSELECT
B[15] => Add1.IN17
clk => err~reg0.CLK
clk => out1[0].CLK
clk => out1[1].CLK
clk => out1[2].CLK
clk => out1[3].CLK
clk => out1[4].CLK
clk => out1[5].CLK
clk => out1[6].CLK
clk => out1[7].CLK
clk => out1[8].CLK
clk => out1[9].CLK
clk => out1[10].CLK
clk => out1[11].CLK
clk => out1[12].CLK
clk => out1[13].CLK
clk => out1[14].CLK
clk => out1[15].CLK
clk => out2[0].CLK
clk => out2[1].CLK
clk => out2[2].CLK
clk => out2[3].CLK
clk => out2[4].CLK
clk => out2[5].CLK
clk => out2[6].CLK
clk => out2[7].CLK
clk => out2[8].CLK
clk => out2[9].CLK
clk => out2[10].CLK
clk => out2[11].CLK
clk => out2[12].CLK
clk => out2[13].CLK
clk => out2[14].CLK
clk => out2[15].CLK
clk => rA[0].CLK
clk => rA[1].CLK
clk => rA[2].CLK
clk => rA[3].CLK
clk => rA[4].CLK
clk => rA[5].CLK
clk => rA[6].CLK
clk => rA[7].CLK
clk => rA[8].CLK
clk => rA[9].CLK
clk => rA[10].CLK
clk => rA[11].CLK
clk => rA[12].CLK
clk => rA[13].CLK
clk => rA[14].CLK
clk => rA[15].CLK
clk => countOut[0].CLK
clk => countOut[1].CLK
clk => countOut[2].CLK
clk => countOut[3].CLK
clk => ps~1.DATAIN
rst => err~reg0.ACLR
rst => out1[0].ACLR
rst => out1[1].ACLR
rst => out1[2].ACLR
rst => out1[3].ACLR
rst => out1[4].ACLR
rst => out1[5].ACLR
rst => out1[6].ACLR
rst => out1[7].ACLR
rst => out1[8].ACLR
rst => out1[9].ACLR
rst => out1[10].ACLR
rst => out1[11].ACLR
rst => out1[12].ACLR
rst => out1[13].ACLR
rst => out1[14].ACLR
rst => out1[15].ACLR
rst => out2[0].ACLR
rst => out2[1].ACLR
rst => out2[2].ACLR
rst => out2[3].ACLR
rst => out2[4].ACLR
rst => out2[5].ACLR
rst => out2[6].ACLR
rst => out2[7].ACLR
rst => out2[8].ACLR
rst => out2[9].ACLR
rst => out2[10].ACLR
rst => out2[11].ACLR
rst => out2[12].ACLR
rst => out2[13].ACLR
rst => out2[14].ACLR
rst => out2[15].ACLR
rst => rA[0].ACLR
rst => rA[1].ACLR
rst => rA[2].ACLR
rst => rA[3].ACLR
rst => rA[4].ACLR
rst => rA[5].ACLR
rst => rA[6].ACLR
rst => rA[7].ACLR
rst => rA[8].ACLR
rst => rA[9].ACLR
rst => rA[10].ACLR
rst => rA[11].ACLR
rst => rA[12].ACLR
rst => rA[13].ACLR
rst => rA[14].ACLR
rst => rA[15].ACLR
rst => countOut[0].ACLR
rst => countOut[1].ACLR
rst => countOut[2].ACLR
rst => countOut[3].ACLR
rst => ps~3.DATAIN
start => Selector1.IN2
start => Selector0.IN1
start => ns.Load.DATAB
R2[0] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[1] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[2] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[3] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[4] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[5] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[6] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[7] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[8] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[9] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[10] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[11] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[12] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[13] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[14] <= R2.DB_MAX_OUTPUT_PORT_TYPE
R2[15] <= R2.DB_MAX_OUTPUT_PORT_TYPE
Q[0] <= out1[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= out1[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= out1[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= out1[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= out1[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= out1[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= out1[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= out1[7].DB_MAX_OUTPUT_PORT_TYPE
Q[8] <= out1[8].DB_MAX_OUTPUT_PORT_TYPE
Q[9] <= out1[9].DB_MAX_OUTPUT_PORT_TYPE
Q[10] <= out1[10].DB_MAX_OUTPUT_PORT_TYPE
Q[11] <= out1[11].DB_MAX_OUTPUT_PORT_TYPE
Q[12] <= out1[12].DB_MAX_OUTPUT_PORT_TYPE
Q[13] <= out1[13].DB_MAX_OUTPUT_PORT_TYPE
Q[14] <= out1[14].DB_MAX_OUTPUT_PORT_TYPE
Q[15] <= out1[15].DB_MAX_OUTPUT_PORT_TYPE
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
err <= err~reg0.DB_MAX_OUTPUT_PORT_TYPE


|eightBusInterface|outputWrapper:myOutputWrapper
clk => R_reg[0].CLK
clk => R_reg[1].CLK
clk => R_reg[2].CLK
clk => R_reg[3].CLK
clk => R_reg[4].CLK
clk => R_reg[5].CLK
clk => R_reg[6].CLK
clk => R_reg[7].CLK
clk => R_reg[8].CLK
clk => R_reg[9].CLK
clk => R_reg[10].CLK
clk => R_reg[11].CLK
clk => R_reg[12].CLK
clk => R_reg[13].CLK
clk => R_reg[14].CLK
clk => R_reg[15].CLK
clk => Q_reg[0].CLK
clk => Q_reg[1].CLK
clk => Q_reg[2].CLK
clk => Q_reg[3].CLK
clk => Q_reg[4].CLK
clk => Q_reg[5].CLK
clk => Q_reg[6].CLK
clk => Q_reg[7].CLK
clk => Q_reg[8].CLK
clk => Q_reg[9].CLK
clk => Q_reg[10].CLK
clk => Q_reg[11].CLK
clk => Q_reg[12].CLK
clk => Q_reg[13].CLK
clk => Q_reg[14].CLK
clk => Q_reg[15].CLK
clk => counterOutput[0].CLK
clk => counterOutput[1].CLK
clk => ps~1.DATAIN
rst => R_reg[0].ACLR
rst => R_reg[1].ACLR
rst => R_reg[2].ACLR
rst => R_reg[3].ACLR
rst => R_reg[4].ACLR
rst => R_reg[5].ACLR
rst => R_reg[6].ACLR
rst => R_reg[7].ACLR
rst => R_reg[8].ACLR
rst => R_reg[9].ACLR
rst => R_reg[10].ACLR
rst => R_reg[11].ACLR
rst => R_reg[12].ACLR
rst => R_reg[13].ACLR
rst => R_reg[14].ACLR
rst => R_reg[15].ACLR
rst => Q_reg[0].ACLR
rst => Q_reg[1].ACLR
rst => Q_reg[2].ACLR
rst => Q_reg[3].ACLR
rst => Q_reg[4].ACLR
rst => Q_reg[5].ACLR
rst => Q_reg[6].ACLR
rst => Q_reg[7].ACLR
rst => Q_reg[8].ACLR
rst => Q_reg[9].ACLR
rst => Q_reg[10].ACLR
rst => Q_reg[11].ACLR
rst => Q_reg[12].ACLR
rst => Q_reg[13].ACLR
rst => Q_reg[14].ACLR
rst => Q_reg[15].ACLR
rst => counterOutput[0].ACLR
rst => counterOutput[1].ACLR
rst => ps~3.DATAIN
ready => ns.Loading.DATAB
ready => Selector0.IN1
receiveData => Selector2.IN3
receiveData => Selector1.IN2
receiveData => ns.IN1
Q[0] => Q_reg[0].DATAIN
Q[1] => Q_reg[1].DATAIN
Q[2] => Q_reg[2].DATAIN
Q[3] => Q_reg[3].DATAIN
Q[4] => Q_reg[4].DATAIN
Q[5] => Q_reg[5].DATAIN
Q[6] => Q_reg[6].DATAIN
Q[7] => Q_reg[7].DATAIN
Q[8] => Q_reg[8].DATAIN
Q[9] => Q_reg[9].DATAIN
Q[10] => Q_reg[10].DATAIN
Q[11] => Q_reg[11].DATAIN
Q[12] => Q_reg[12].DATAIN
Q[13] => Q_reg[13].DATAIN
Q[14] => Q_reg[14].DATAIN
Q[15] => Q_reg[15].DATAIN
R[0] => R_reg[0].DATAIN
R[1] => R_reg[1].DATAIN
R[2] => R_reg[2].DATAIN
R[3] => R_reg[3].DATAIN
R[4] => R_reg[4].DATAIN
R[5] => R_reg[5].DATAIN
R[6] => R_reg[6].DATAIN
R[7] => R_reg[7].DATAIN
R[8] => R_reg[8].DATAIN
R[9] => R_reg[9].DATAIN
R[10] => R_reg[10].DATAIN
R[11] => R_reg[11].DATAIN
R[12] => R_reg[12].DATAIN
R[13] => R_reg[13].DATAIN
R[14] => R_reg[14].DATAIN
R[15] => R_reg[15].DATAIN
readyForInput <= readyForInput.DB_MAX_OUTPUT_PORT_TYPE
OutBuffFull <= OutBuffFull.DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[0] <= eightBitOut[0].DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[1] <= eightBitOut[1].DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[2] <= eightBitOut[2].DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[3] <= eightBitOut[3].DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[4] <= eightBitOut[4].DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[5] <= eightBitOut[5].DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[6] <= eightBitOut[6].DB_MAX_OUTPUT_PORT_TYPE
eightBitOut[7] <= eightBitOut[7].DB_MAX_OUTPUT_PORT_TYPE


